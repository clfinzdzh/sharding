package com.ems.${package.ModuleName}.adapter;

import ${package.Entity}.${entity};
import com.etcc.enums.CommonFrameBizStatus;
import com.etcc.${package.ModuleName}.entity.dto.${entity}Dto;
import com.etcc.${package.ModuleName}.entity.vo.${entity}Vo;
import com.etcc.${package.ModuleName}.entity.vo.${entity}QueryVo;
import com.etcc.exception.BusinessStatusException;
import com.google.common.collect.Lists;
import java.util.List;
import lombok.extern.slf4j.Slf4j;
import com.etcc.utils.Safes;
import org.springframework.beans.BeanUtils;

/**
 * @author ${author}
 * @date ${date}
 */
@Slf4j
public class ${entity}Adapter {

    /**
     * ${entity}Dto转换${entity}
     */
    public static ${entity} adapt${entity}(${entity}Dto source) {
        try {
            ${entity} resp = new ${entity}();
            BeanUtils.copyProperties(source,resp);
            return resp;
        } catch (Exception e) {
            log.warn("dto转换${entity}时发生异常：" + e.getMessage(), e);
            throw new BusinessStatusException(CommonFrameBizStatus.ADAPTATION_EXCEPTION,e.getMessage());
        }
    }

    public static ${entity}Vo adapt${entity}Vo(${entity} source) {
        try {
            ${entity}Vo resp = new ${entity}Vo();
            BeanUtils.copyProperties(source,resp);
            return resp;
        } catch (Exception e) {
            log.warn("Test转换po时发生异常：" + e.getMessage(), e);
            throw new BusinessStatusException(CommonFrameBizStatus.ADAPTATION_EXCEPTION,e.getMessage());
        }
    }

    public static List<${entity}Vo> adapt${entity}Vos(List<${entity}> source) {
        List<${entity}Vo> vos = Lists.newArrayList();
        Safes.of(source).forEach(entity -> vos.add(adapt${entity}Vo(entity)));
        return vos;
    }

    public static List<${entity}QueryVo> adapt${entity}QueryVos(List<${entity}> source) {
        try {
            List<${entity}QueryVo> queryVos = Lists.newArrayList();
            Safes.of(source).forEach(entity -> {
                ${entity}QueryVo queryVo = new ${entity}QueryVo();
                BeanUtils.copyProperties(entity, queryVo);
                queryVos.add(queryVo);
            });
            return queryVos;
        } catch (Exception e) {
            log.warn("Test转换po时发生异常：" + e.getMessage(), e);
            throw new BusinessStatusException(CommonFrameBizStatus.ADAPTATION_EXCEPTION, e.getMessage());
        }
    }
}
