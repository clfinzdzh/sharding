package ${package.Controller};
import com.ems.common.base.BaseResult;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.*;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import java.util.List;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Service}.${table.serviceName};
import com.ems.${package.ModuleName}.entity.dto.${entity}Dto;
import com.ems.${package.ModuleName}.entity.vo.${entity}Vo;
import org.springframework.validation.annotation.Validated;


/**
 * @desc todo:
 * @author ${author}
 * @date ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
    * @desc 根据主键查询一条记录
    * @param ${table.entityPath}Dto
    * @return
    */
    @GetMapping(value="/findById")
    public BaseResult<${entity}Vo> findById(${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.findById(${table.entityPath}Dto));
    }

    /**
     * @desc 根据条件查询一条记录
     * 注意使用场景：建议查询条件为唯一约束字段
     * @param userDto
     * @return
     */
    @GetMapping(value="/findOne")
    public BaseResult<${entity}Vo> findOne(${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.findOne(${table.entityPath}Dto));
    }

    /**
     * @desc 根据条件查询所有记录
     * @param ${table.entityPath}Dto
     * @return
     */
    @GetMapping(value="/findList")
    public BaseResult<List<${entity}Vo>> findList(${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.findList(${table.entityPath}Dto));
    }
    /**
     * @desc 根据条件查询分页记录
     * @param userDto
     * @return
     */
    @PostMapping(value="/findPageList")
    public BaseResult<Page<${entity}Vo>> findPageList(@RequestBody ${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.findPageList(getPage(),${table.entityPath}Dto));
    }

    /**
     * @desc 新增一条记录
     * 注意：根据具体的业务场景选择性使用或者改造
     * @param ${table.entityPath}Dto
     * @return
     */
    @PostMapping(value="/saveOne")
    public BaseResult<Integer> saveOne(@Validated @RequestBody ${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.saveOne(${table.entityPath}Dto));
    }

    /**
     * @desc 根据主键更新一条记录，主键不能为空
     * @param ${table.entityPath}Dto
     * @return
     */
    @PutMapping(value="/modifyById")
    public BaseResult<Integer> modifyById(@RequestBody ${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.modifyById(${table.entityPath}Dto));
    }

    /**
    * @desc 根据主键删除一条记录，主键不能为空
    * @param ${table.entityPath}Dto
    * @return
    */
    @DeleteMapping(value="/removeById")
    public BaseResult<Integer> removeById(@RequestBody ${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.removeById(${table.entityPath}Dto));
    }

    /**
    * @desc 根据主键删除一条记录，主键不能为空（逻辑）
    * @param ${table.entityPath}Dto
    * @return
    */
    @DeleteMapping(value="/removeByIdLogic")
    public BaseResult<Integer> removeByIdLogic(@RequestBody ${entity}Dto ${table.entityPath}Dto){
        return BaseResult.success(${table.entityPath}Service.removeById(${table.entityPath}Dto));
    }
}